
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  'application/json;charset=utf-8';

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #add by customer
    lua_package_path "//usr/local/openresty/lualib/?.lua;;";
    lua_package_cpath "/usr/local/openresty/lualib/?.so;;";
    lua_shared_dict global  20m;
    init_by_lua_file  /usr/local/openresty/lua/initialize.lua;

    server {
        listen       80;
        server_name  localhost;

        charset utf-8;

        location /reload {
              allow 127.0.0.1;
              deny all;
              content_by_lua 'DispatchReload()';
        }

	location /proxy {
                internal;

                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                proxy_connect_timeout 2s;
                proxy_send_timeout  5s;
                proxy_read_timeout  10s;
                proxy_buffer_size 4k;
                proxy_buffers 4 32k;
                proxy_busy_buffers_size 64k;
                proxy_temp_file_write_size 64k;

                proxy_pass $dispatch;
                error_log logs/luapi.proxy.error.log;
        }

        location / {
            root   html;
            index  index.html index.htm;
     	    set $dispatch $1;
	        lua_need_request_body on;
            content_by_lua_file /usr/local/openresty/lua/dispatcher.lua;
            error_log logs/luapi.error.log;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}
